<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' inline='true' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP by Country per Year_data' name='excel-direct.0wuax640mrwmzl19ko22b18e7xn9'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Download new/GDP by Country per Year_data.xlsx.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0wuax640mrwmzl19ko22b18e7xn9' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:AC230:no:A1:AC230:1' lost='0' outcome='1' processed='6319'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='2000' ordinal='1' />
            <column datatype='real' name='2001' ordinal='2' />
            <column datatype='real' name='2002' ordinal='3' />
            <column datatype='real' name='2003' ordinal='4' />
            <column datatype='real' name='2004' ordinal='5' />
            <column datatype='real' name='2005' ordinal='6' />
            <column datatype='real' name='2006' ordinal='7' />
            <column datatype='real' name='2007' ordinal='8' />
            <column datatype='real' name='2008' ordinal='9' />
            <column datatype='real' name='2009' ordinal='10' />
            <column datatype='real' name='2010' ordinal='11' />
            <column datatype='real' name='2011' ordinal='12' />
            <column datatype='real' name='2012' ordinal='13' />
            <column datatype='real' name='2013' ordinal='14' />
            <column datatype='real' name='2014' ordinal='15' />
            <column datatype='real' name='2015' ordinal='16' />
            <column datatype='real' name='2016' ordinal='17' />
            <column datatype='real' name='2017' ordinal='18' />
            <column datatype='real' name='2018' ordinal='19' />
            <column datatype='real' name='2019' ordinal='20' />
            <column datatype='real' name='2020' ordinal='21' />
            <column datatype='real' name='5.2' ordinal='22' />
            <column datatype='real' name='3.3' ordinal='23' />
            <column datatype='real' name='2.4' ordinal='24' />
            <column datatype='real' name='1.7' ordinal='25' />
            <column datatype='real' name='1.7 1' ordinal='26' />
            <column datatype='real' name='1.6' ordinal='27' />
            <column datatype='real' name='1.6 1' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0wuax640mrwmzl19ko22b18e7xn9' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:AC230:no:A1:AC230:1' lost='0' outcome='1' processed='6319'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='2000' ordinal='1' />
            <column datatype='real' name='2001' ordinal='2' />
            <column datatype='real' name='2002' ordinal='3' />
            <column datatype='real' name='2003' ordinal='4' />
            <column datatype='real' name='2004' ordinal='5' />
            <column datatype='real' name='2005' ordinal='6' />
            <column datatype='real' name='2006' ordinal='7' />
            <column datatype='real' name='2007' ordinal='8' />
            <column datatype='real' name='2008' ordinal='9' />
            <column datatype='real' name='2009' ordinal='10' />
            <column datatype='real' name='2010' ordinal='11' />
            <column datatype='real' name='2011' ordinal='12' />
            <column datatype='real' name='2012' ordinal='13' />
            <column datatype='real' name='2013' ordinal='14' />
            <column datatype='real' name='2014' ordinal='15' />
            <column datatype='real' name='2015' ordinal='16' />
            <column datatype='real' name='2016' ordinal='17' />
            <column datatype='real' name='2017' ordinal='18' />
            <column datatype='real' name='2018' ordinal='19' />
            <column datatype='real' name='2019' ordinal='20' />
            <column datatype='real' name='2020' ordinal='21' />
            <column datatype='real' name='5.2' ordinal='22' />
            <column datatype='real' name='3.3' ordinal='23' />
            <column datatype='real' name='2.4' ordinal='24' />
            <column datatype='real' name='1.7' ordinal='25' />
            <column datatype='real' name='1.7 1' ordinal='26' />
            <column datatype='real' name='1.6' ordinal='27' />
            <column datatype='real' name='1.6 1' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Table 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AC230:no:A1:AC230:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>6319</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5.2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5.2]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>5.2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3.3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3.3]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>3.3</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2.4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2.4]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>2.4</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.7]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>1.7</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.7 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.7 1]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>1.7 1</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.6]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>1.6</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.6 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.6 1]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>1.6 1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_F96D18693BA14892889DCE11D0DAB255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[1.6 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[1.6]' role='measure' type='quantitative' />
      <column datatype='real' name='[1.7 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[1.7]' role='measure' type='quantitative' />
      <column datatype='real' name='[2.4]' role='measure' type='quantitative' />
      <column datatype='real' name='[2006]' role='measure' type='quantitative' />
      <column datatype='real' name='[2007]' role='measure' type='quantitative' />
      <column datatype='real' name='[2008]' role='measure' type='quantitative' />
      <column datatype='real' name='[2009]' role='measure' type='quantitative' />
      <column datatype='real' name='[2010]' role='measure' type='quantitative' />
      <column datatype='real' name='[2011]' role='measure' type='quantitative' />
      <column datatype='real' name='[2012]' role='measure' type='quantitative' />
      <column datatype='real' name='[2013]' role='measure' type='quantitative' />
      <column datatype='real' name='[2014]' role='measure' type='quantitative' />
      <column datatype='real' name='[2015]' role='measure' type='quantitative' />
      <column datatype='real' name='[2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[2017]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018]' role='measure' type='quantitative' />
      <column datatype='real' name='[2019]' role='measure' type='quantitative' />
      <column datatype='real' name='[2020]' role='measure' type='quantitative' />
      <column datatype='real' name='[3.3]' role='measure' type='quantitative' />
      <column datatype='real' name='[5.2]' role='measure' type='quantitative' />
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Table 1' datatype='table' name='[__tableau_internal_object_id__].[Table 1_F96D18693BA14892889DCE11D0DAB255]' role='measure' type='quantitative' />
      <column-instance column='[2010]' derivation='Avg' name='[avg:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[1.6 1]' derivation='Sum' name='[sum:1.6 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1.6]' derivation='Sum' name='[sum:1.6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1.7 1]' derivation='Sum' name='[sum:1.7 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1.7]' derivation='Sum' name='[sum:1.7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2.4]' derivation='Sum' name='[sum:2.4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2019]' derivation='Sum' name='[sum:2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2020]' derivation='Sum' name='[sum:2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3.3]' derivation='Sum' name='[sum:3.3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[5.2]' derivation='Sum' name='[sum:5.2:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country1)' hidden='true' name='[Action (Country1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/sdmit/AppData/Local/Temp/TableauTemp/#TableauTemp_0qtwgoy06fb8qq12hanym1upatsv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/25/2024 08:49:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2000</remote-alias>
              <ordinal>1</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2001</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2001]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2001</remote-alias>
              <ordinal>2</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2002</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2002]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2002</remote-alias>
              <ordinal>3</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2003</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2003]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2003</remote-alias>
              <ordinal>4</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2004</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2004]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2004</remote-alias>
              <ordinal>5</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2005]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2005</remote-alias>
              <ordinal>6</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2006</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2006]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2006</remote-alias>
              <ordinal>7</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2007</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2007]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2007</remote-alias>
              <ordinal>8</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>118</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2008</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2008]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2008</remote-alias>
              <ordinal>9</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2009</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2009]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2009</remote-alias>
              <ordinal>10</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2010]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010</remote-alias>
              <ordinal>11</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>12</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>13</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>14</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>15</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>16</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>17</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>18</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>19</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>20</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2020</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2020]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2020</remote-alias>
              <ordinal>21</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>5.2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[5.2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>5.2</remote-alias>
              <ordinal>22</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3.3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[3.3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3.3</remote-alias>
              <ordinal>23</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2.4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2.4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2.4</remote-alias>
              <ordinal>24</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.7</remote-alias>
              <ordinal>25</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.7 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.7 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.7 1</remote-alias>
              <ordinal>26</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.6</remote-alias>
              <ordinal>27</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.6 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.6 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.6 1</remote-alias>
              <ordinal>28</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP by Country per Year!data_693419D364924F44A241B81BAD643572]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2009:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:1.6:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:3.3:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2.4:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2013:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[avg:2010:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2010:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2019:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:1.6 1:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:5.2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2017:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2007:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2014:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2015:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2018:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2020:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2011:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2008:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[__tableau_internal_object_id__].[cnt:GDP by Country per Year!data_693419D364924F44A241B81BAD643572:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:1.7:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2016:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2012:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:1.7 1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Bar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan, Republic of&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Country&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and G&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, People&apos;s R&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerging and De&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ASEAN-5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middle East (Reg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sub-Saharan Afri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and N&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emerging marke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tob&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Repu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taiwan Province&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Advanced econo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Asia and&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Major advanced&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korea, Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia and Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle East and&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other advanced&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;São Tomé and Pr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African R&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedoni&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Dem. Rep&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russian Federati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Hemisp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Australia and Ne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latin America an&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia, Fed.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent an&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa (Region)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP by Country per Year_data' id='GDP by Country per Year!data_693419D364924F44A241B81BAD643572'>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='Table 1' id='Table 1_F96D18693BA14892889DCE11D0DAB255'>
            <properties context=''>
              <relation connection='excel-direct.0wuax640mrwmzl19ko22b18e7xn9' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
                <columns gridOrigin='A1:AC230:no:A1:AC230:1' lost='0' outcome='1' processed='6319'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='2000' ordinal='1' />
                  <column datatype='real' name='2001' ordinal='2' />
                  <column datatype='real' name='2002' ordinal='3' />
                  <column datatype='real' name='2003' ordinal='4' />
                  <column datatype='real' name='2004' ordinal='5' />
                  <column datatype='real' name='2005' ordinal='6' />
                  <column datatype='real' name='2006' ordinal='7' />
                  <column datatype='real' name='2007' ordinal='8' />
                  <column datatype='real' name='2008' ordinal='9' />
                  <column datatype='real' name='2009' ordinal='10' />
                  <column datatype='real' name='2010' ordinal='11' />
                  <column datatype='real' name='2011' ordinal='12' />
                  <column datatype='real' name='2012' ordinal='13' />
                  <column datatype='real' name='2013' ordinal='14' />
                  <column datatype='real' name='2014' ordinal='15' />
                  <column datatype='real' name='2015' ordinal='16' />
                  <column datatype='real' name='2016' ordinal='17' />
                  <column datatype='real' name='2017' ordinal='18' />
                  <column datatype='real' name='2018' ordinal='19' />
                  <column datatype='real' name='2019' ordinal='20' />
                  <column datatype='real' name='2020' ordinal='21' />
                  <column datatype='real' name='5.2' ordinal='22' />
                  <column datatype='real' name='3.3' ordinal='23' />
                  <column datatype='real' name='2.4' ordinal='24' />
                  <column datatype='real' name='1.7' ordinal='25' />
                  <column datatype='real' name='1.7 1' ordinal='26' />
                  <column datatype='real' name='1.6' ordinal='27' />
                  <column datatype='real' name='1.6 1' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='GDP INRS' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_7174837F175C4D449C2AE72918289A61]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='GDP BC' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_9A63F9971E214213837685EB25BC4DD0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='GDP AMEF' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_CB5743D8C9C04610ADB263BD81416D37]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='GDP BELGIUM' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_FE1CD076F7994B0C9061374B73B9ACF4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='COUNTRY' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='COUNTRY'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]'>
            <groupfilter function='member' level='[Country]' member='&quot;Country&quot;' user:ui-action-filter='[Action4_CB5743D8C9C04610ADB263BD81416D37]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]' field-type='quantitative' max='18866197.642893266' min='-9546363.5360476486' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]' field-type='quantitative' max='13245843.961260147' min='-14618815.879753156' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]</rows>
        <cols>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02803785-5FC4-44EB-A5A6-0C05C55A7101}' />
    </worksheet>
    <worksheet name='GDP AMEF'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]'>
            <groupfilter function='member' level='[Country]' member='&quot;Country&quot;' user:ui-action-filter='[Action4_CB5743D8C9C04610ADB263BD81416D37]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2004:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2005:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk] + ([federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2004:qk] + [federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2005:qk]))</rows>
        <cols>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{036BF8FE-C69A-4AD7-84BB-5955C64AC658}' />
    </worksheet>
    <worksheet name='GDP BC'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='real' name='[2018]' role='measure' type='quantitative' />
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2018:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]'>
            <groupfilter function='member' level='[Country]' member='&quot;Country&quot;' user:ui-action-filter='[Action4_CB5743D8C9C04610ADB263BD81416D37]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
              <path column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Multiple Values]</rows>
        <cols>([federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk] / [federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F77CB878-6DAA-4FB9-A819-4E1BF3D24586}' />
    </worksheet>
    <worksheet name='GDP BELGIUM'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2010:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Multiple Values]' />
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Multiple Values]</rows>
        <cols>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{62E53D24-A324-4643-AC7B-48C45F0A51B0}' />
    </worksheet>
    <worksheet name='GDP INRS'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[2010]' derivation='Avg' name='[avg:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action3_9A63F9971E214213837685EB25BC4DD0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]'>
            <groupfilter function='member' level='[Country]' member='&quot;Country&quot;' user:ui-action-filter='[Action4_CB5743D8C9C04610ADB263BD81416D37]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]</column>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
              <size column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[avg:2010:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]</rows>
        <cols>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3EC7C019-93D3-4AF6-9315-99864E641519}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1rgsm3z1lin2ux17yqymm0lagi2k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rgsm3z1lin2ux17yqymm0lagi2k'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central Asia and&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]' field-type='quantitative' max='23951834.811866015' min='8229102.2115772441' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]' field-type='quantitative' max='7927288.9090851238' min='-2900199.1994694946' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' />
              <lod column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Latitude (generated)]</rows>
        <cols>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2F0A69D3-ED11-4D01-965D-838B88B22FC9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1150' minheight='560' minwidth='320' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98122' id='13' param='horz' type-v2='layout-flow' w='98608' x='696' y='939'>
            <zone fixed-size='743' h='98122' id='7' is-fixed='true' param='horz' type-v2='layout-flow' w='64609' x='696' y='939'>
              <zone fixed-size='345' h='98122' id='5' is-fixed='true' type-v2='layout-basic' w='64609' x='696' y='939'>
                <zone h='49140' id='9' name='GDP BELGIUM' w='32303' x='696' y='49921'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48982' id='10' name='GDP INRS' w='32302' x='696' y='939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48982' id='11' name='GDP BC' w='32307' x='32998' y='939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49140' id='15' name='COUNTRY' w='32306' x='32999' y='49921'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='78' h='98122' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='6783' x='65305' y='939'>
              <zone h='10916' id='14' name='GDP BC' pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' type-v2='color' w='6783' x='65305' y='939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5986' id='16' name='COUNTRY' pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' type-v2='color' w='6783' x='65305' y='11855'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98122' id='17' name='GDP AMEF' w='27216' x='72088' y='939'>
              <layout-cache cell-count-w='3' non-cell-size-w='78' type-h='fixed' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98122' id='34' param='vert' type-v2='layout-flow' w='98608' x='696' y='939'>
                <zone fixed-size='280' h='48982' id='10' is-fixed='true' name='GDP INRS' w='32302' x='696' y='939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48982' id='11' is-fixed='true' name='GDP BC' w='32307' x='32998' y='939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10916' id='14' name='GDP BC' pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' type-v2='color' w='6783' x='65305' y='939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98122' id='17' is-fixed='true' name='GDP AMEF' w='27216' x='72088' y='939'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49140' id='9' is-fixed='true' name='GDP BELGIUM' w='32303' x='696' y='49921'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49140' id='15' is-fixed='true' name='COUNTRY' w='32306' x='32999' y='49921'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5986' id='16' name='COUNTRY' pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' type-v2='color' w='6783' x='65305' y='11855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6E34E6C9-28C7-4150-BFBC-2605C8ACAED3}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='GDP DASHBOARD' captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='COUNTRY'>
                        <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
                          <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='GDP AMEF'>
                        <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
                          <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2005:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
                                  <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2005:qk]</field>
                                  <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Italy&quot;</value>
                                <value>0.80000000000000004</value>
                                <value>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2005:qk]&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='GDP BC'>
                        <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
                          <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='GDP BELGIUM'>
                        <filter class='categorical' column='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Action (Country)]'>
                          <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' user:ui-action-filter='[Action1_9D234EFE2B614E9B9A9DB1AD1164F452]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection />
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{05EB6A8A-D99F-43B4-9C42-97CDD6368EAF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='COUNTRY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{499B2383-188C-4A15-8FC6-80A1A4B00568}' />
    </window>
    <window class='worksheet' name='GDP BELGIUM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA65A9A3-5F14-4E44-9DC6-1FB564CCB633}' />
    </window>
    <window class='worksheet' name='GDP INRS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[avg:2010:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B86B5241-C024-4CCF-951B-9E5FD4E6DB84}' />
    </window>
    <window class='worksheet' name='GDP BC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23161053-7CF0-49E4-AC16-87152CE8C946}' />
    </window>
    <window class='worksheet' name='GDP AMEF'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2A7E269-FA38-46EB-B80B-C1860EC38DB0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='COUNTRY'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='GDP AMEF'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]</field>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Country&quot;</value>
                  <value>2006.0</value>
                  <value>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2006:qk]&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='GDP BC'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='GDP BELGIUM'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Multiple Values]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
                    <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Country&quot;</value>
                  <value>&quot;[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[sum:2008:qk]&quot;</value>
                  <value>2008.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='GDP INRS' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A5673295-2AD9-469C-AF75-44A0E65575B7}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{04E0EA87-9914-403F-B2A2-6176FCDBE08D}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[:Measure Names]</field>
            <field>[federated.1rgsm3z1lin2ux17yqymm0lagi2k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CC1BE16-2423-4301-A924-3BEF5446C566}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COUNTRY' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP AMEF' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP BC' width='192'>
      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
      ZChCc88oqWgfodKFrF2zmgUrNnJpz2FeefEkhq5whBdxT34An9PF0nAne7e/jENPk7By2fxo
      ETo6Rcvvxr9tF7940Y1hmQTKVlFR4JMzQOIDaWrmkeEtYxEfHiQyOII5pQQOj59QKA+XbpGI
      RekfHMHSXeTk5uH3ONE0sFJjRPr6iZsaWTl55PndaJqGUorESD/90VGU4SUvnIfXee33/8bG
      Rmpqam7RtorZSNM0LYMByCwJgNA0TZPmsbA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCw
      NQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJ
      gLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLC1zHaT
      qhSWmaTj1Dvsv+Rj6+bbyfYYU2cgHW3kx8+/S+Xmrdy5rBiHUsQjTby+bQdtIw6q193HA6sr
      cOgaykrReuRNdhxqIp1dwX1bH6Iq5EGTXvLEB/j/SB/+G0UhfNEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP BELGIUM' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP INRS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      NNfSHqb/H36/WUFHj3aPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
